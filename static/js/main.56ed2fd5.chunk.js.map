{"version":3,"sources":["Arrow.gif","Charting.js","SignIn.js","SignUp.js","config.js","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","ChartData","labels","datasets","label","fill","backgroundColor","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","type","borderColor","showLine","Chart","props","init","array","a","popt","b","c","LPs","reverse","i","length","val","Math","log","push","x","y","state","loading","bind","GetWelcome","getTimeToNextRank","upper","this","getNextHundred","solution","round","exp","document","getElementById","innerHTML","ceil","setTimeout","chartReference","chartInstance","update","welcome","name","toUpperCase","id","ref","reference","Component","SignIn","Form","Field","placeholder","Button","SignUp","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","gameOptions","key","text","value","App","writeUserData","Firebase","database","set","onFormSubmit","event","preventDefault","axios","get","then","response","setState","isSubmitted","initializeApp","formValue","handleName","target","Switch","Route","exact","path","component","render","className","Dropdown","selection","options","onChange","color","circular","onClick","href","src","arrow","React","Boolean","window","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.56ed2fd5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Arrow.631ab28c.gif\";","import React, {Component} from 'react';\r\nimport { Scatter } from 'react-chartjs-2';\r\n\r\nvar ChartData = {\r\n  labels: ['Scatter'],\r\n  datasets: [\r\n    {\r\n      label: 'My Games',\r\n      fill: false,\r\n      backgroundColor: '#f0f8fc',\r\n      pointBorderColor: 'rgba(75,192,192,1)',\r\n      pointBackgroundColor: '#fff',\r\n      pointBorderWidth: 1,\r\n      pointHoverRadius: 5,\r\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 1,\r\n      pointHitRadius: 10,\r\n      data: []\r\n    },\r\n    {\r\n      type: 'line',\r\n      label: 'My Estimates',\r\n      data: [],\r\n      fill: false,\r\n      backgroundColor: \"rgba(218,83,79, .7)\",\r\n      borderColor: \"rgba(218,83,79, .7)\",\r\n      pointRadius: 1,\r\n      showLine: true\r\n    }\r\n  ]\r\n};\r\n\r\nexport default class Chart extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n      loading:true\r\n    }\r\n    this.init = this.init.bind(this);\r\n    this.GetWelcome = this.GetWelcome.bind(this);\r\n    this.getTimeToNextRank = this.getTimeToNextRank.bind(this);\r\n  }\r\n  init = (array) =>{\r\n    let a = this.props.data.popt[0];\r\n    let b = this.props.data.popt[1];\r\n    let c = this.props.data.popt[2];\r\n    this.props.data.LPs.reverse();\r\n    for(let i = 0; i < array.length; i++){\r\n       var val;\r\n       if (i===0){\r\n          val = a + c;\r\n       }\r\n       else{\r\n         val = a * Math.log(b*i) + c;\r\n       }\r\n      ChartData.datasets[0].data.push({x:i,y:array[i]});\r\n      ChartData.datasets[1].data.push({x:i,y:val});\r\n    }\r\n  };\r\n  getTimeToNextRank(){\r\n    var NextRank = this.getNextHundred(this.props.data.LPs[0])\r\n    var upper = (NextRank - this.props.data.popt[2]) / this.props.data.popt[0];\r\n    var solution = Math.round((Math.exp(upper))/ this.props.data.popt[1]);\r\n    document.getElementById(\"NeverReach\").innerHTML = \"According to your trends, you will reach your next Rank in : \" + solution + \" Games\";\r\n    document.getElementById(\"feel-good\").innerHTML = \"You are doing very well amongst other players in your rank\"\r\n  }\r\n  getNextHundred(a){\r\n    return Math.ceil(a/100)*100\r\n  }\r\n  componentDidMount(){\r\n    this.init(this.props.data.LPs);\r\n    setTimeout(()=>{ this.chartReference.chartInstance.update(); },1000);\r\n    this.GetWelcome();\r\n    this.getTimeToNextRank();\r\n  }\r\nGetWelcome(){\r\n  var welcome= \"WELCOME \" + this.props.name\r\n  document.getElementById(\"Welcome\").innerHTML = welcome.toUpperCase()\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"toHide\">\r\n        <br></br>\r\n        <h1 id=\"Welcome\"><strong></strong></h1>\r\n        <hr></hr>\r\n        <br></br>\r\n        <h2>Here's How You Are Performing</h2> <br></br>\r\n        <Scatter ref={(reference)=> this.chartReference = reference} data={ChartData} />\r\n        <br></br> <br></br>\r\n        <h2 id=\"NeverReach\"> </h2>\r\n        <h2 id=\"feel-good\"></h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Button, Checkbox, Form } from 'semantic-ui-react';\r\n\r\nconst SignIn = () => (\r\n  <Form>\r\n    <Form.Field>\r\n      <label>Email</label>\r\n      <input placeholder='Email' />\r\n    </Form.Field>\r\n    <Form.Field>\r\n      <label>Last Name</label>\r\n      <input placeholder='Password' />\r\n    </Form.Field>\r\n    <Button type='submit'>Submit</Button>\r\n  </Form>\r\n)\r\n\r\nexport default SignIn;\r\n","import React from 'react'\r\nimport { Button, Checkbox, Form } from 'semantic-ui-react';\r\n\r\nconst SignUp = () => (\r\n  <Form>\r\n    <Form.Field>\r\n      <label>Email</label>\r\n      <input placeholder='Email' />\r\n    </Form.Field>\r\n    <Form.Field>\r\n      <label>Last Name</label>\r\n      <input placeholder='Password' />\r\n    </Form.Field>\r\n    <Button type='submit'>Submit</Button>\r\n  </Form>\r\n)\r\n\r\nexport default SignUp;\r\n","const config = {\r\n  apiKey: \"AIzaSyBbH6_EESRh2ZR3dW3bs_a43CHmflF-3C0\",\r\n  authDomain: \"hackthenorth-f4c9e.firebaseapp.com\",\r\n  databaseURL: \"https://hackthenorth-f4c9e.firebaseio.com\",\r\n  projectId: \"hackthenorth-f4c9e\",\r\n  storageBucket: \"hackthenorth-f4c9e.appspot.com\",\r\n  messagingSenderId: \"172253204526\",\r\n  appId: \"1:172253204526:web:6f27a88962e01cefeecfbf\"\r\n}\r\nexport default config;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport { Dropdown } from 'semantic-ui-react';\r\nimport { Button, Form } from 'semantic-ui-react';\r\nimport Charting from './Charting.js';\r\nimport arrow from './Arrow.gif';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport SignIn from './SignIn';\r\nimport SignUp from './SignUp';\r\nimport Firebase from 'firebase';\r\nimport config from './config';\r\n\r\n\r\nconst gameOptions = [\r\n  {\r\n    key: 'Team Fight Tactics',\r\n    text: 'Team Fight Tactics',\r\n    value: 'Team Fight Tactics',\r\n  },\r\n  {\r\n    key: 'League of Legends',\r\n    text: 'League of Legends',\r\n    value: 'League of Legends',\r\n  },\r\n]\r\n\r\nclass App extends React.Component {\r\n  constructor(){\r\n    super();\r\n    Firebase.initializeApp(config);\r\n    this.state ={\r\n      data: [],\r\n      name: \"\",\r\n      isSubmitted:false,\r\n      formValue:\"\"\r\n    }\r\n    this.handleName = this.handleName.bind(this);\r\n    this.writeUserData = this.writeUserData.bind(this);\r\n  }\r\n\r\n  writeUserData =()=>{\r\n    Firebase.database().ref().set(this.state);\r\n  }\r\n\r\n  onFormSubmit = (event) =>{\r\n    event.preventDefault();\r\n    axios.get(`http://localhost:5000/${this.state.name}`)\r\n    .then((response)=>{\r\n      this.setState({data: response.data});\r\n      this.setState({isSubmitted:true})\r\n      this.writeUserData();\r\n    });\r\n  };\r\n\r\n  handleName(event){\r\n    this.setState({name: event.target.value});\r\n  };\r\n\r\n  render(){\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/signup\" component={SignUp}/>\r\n          <Route exact path=\"/login\" component={SignIn}/>\r\n          <Route path=\"/\" render={()=>(\r\n                <div className=\"App\">\r\n                  <div className=\"App-header\">\r\n                    <p><strong>Gamealytics</strong></p>\r\n                  </div>\r\n                  <div className=\"App-body\">\r\n                    <br></br>\r\n                    <h2><label>Type of Game</label></h2>\r\n                    <Dropdown\r\n                      placeholder='Select a game'\r\n                      selection\r\n                      options={gameOptions}\r\n                    />\r\n                    <Form className=\"Form\">\r\n                      <Form.Field>\r\n                        <h2><label>In Game Name</label></h2>\r\n                        <input onChange={this.handleName} value={this.state.name} placeholder=\"IGN\"/>\r\n                      </Form.Field>\r\n                      <Button type='submit' color={'green'} circular={true} onClick={this.onFormSubmit}>Submit</Button>\r\n                    </Form>\r\n                    {/*Render line only untill user clicks submit button */}\r\n                    {(this.state.isSubmitted===true)&&\r\n                    <div>\r\n                      <div className=\"arrow\">\r\n                        <a href=\"#chart-wrapper\"><img src={arrow}/></a>\r\n                      </div>\r\n                      <div id=\"chart-wrapper\">\r\n                      <Charting\r\n                        data={this.state.data}\r\n                        name={this.state.name}\r\n                      />\r\n                      </div>\r\n                    </div>}\r\n                  </div>\r\n                </div>\r\n              )}/>\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter as Router, Switch} from 'react-router-dom';\r\n\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Switch>\r\n      <App />\r\n    </Switch>\r\n  </Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}